CSC 361/661 Digital Media
Fall 2017
Professor Burg

Creating a BMP File by Means of a C/C++ Program

/*This code shows you the format that is expected for an indexed color .bmp file.   This code was written for a Windows computer.  Mac users may have to check to be sure if the code is compatible for them.

If you prefer to make a .tif indexed color file, feel free to look up and use that format*/

void Image::createIndexedFile(RGB colorTable[], unsigned char bitmapI[][300]) {
   char b;
   char m;
   int fileSize;
   short zero;
   int offsetToPixelData;
   int headerSize;
   int imageWidth;
   int imageHeight;
   short one;
   short bitsPerPixel;
   int compressionType;
   int compression;
   int preferredXResolution;
   int preferredYResolution;
   int numColorMapEntries;
   int numSignificantColors;  
   unsigned char z=0;

/*Put the header at the beginning of the .bmp file*/
   b = 'B';
   outFile.write(reinterpret_cast<char *>(&b), 1);
   m = 'M';
   outFile.write(reinterpret_cast<char *>(&m), 1);
   fileSize = 90000;
   outFile.write(reinterpret_cast<char *>(&fileSize), 4);
   zero = 0;
   outFile.write(reinterpret_cast<char *>(&zero), 2);
   outFile.write(reinterpret_cast<char *>(&zero), 2);
   offsetToPixelData = 1078;
   outFile.write(reinterpret_cast<char *>(&offsetToPixelData), 4);
   headerSize = 40;
   outFile.write(reinterpret_cast<char *>(&headerSize), 4);
   imageWidth = 300;
   outFile.write(reinterpret_cast<char *>(&imageWidth), 4);
   imageHeight = 300;
   outFile.write(reinterpret_cast<char *>(&imageHeight), 4);
   one = 1;
   outFile.write(reinterpret_cast<char *>(&one), 2);
   bitsPerPixel = 8;
   outFile.write(reinterpret_cast<char *>(&bitsPerPixel), 2);
   compressionType = 0;
   outFile.write(reinterpret_cast<char *>(&compressionType), 4);
   compression = 0;
   outFile.write(reinterpret_cast<char *>(&compression), 4);
   preferredXResolution = 300;
   outFile.write(reinterpret_cast<char *>(&preferredXResolution), 4);
   preferredYResolution = 300;
   outFile.write(reinterpret_cast<char *>(&preferredYResolution), 4);
   numColorMapEntries = 256;
   outFile.write(reinterpret_cast<char *>(&numColorMapEntries), 4);
   numSignificantColors = 256; 
   outFile.write(reinterpret_cast<char *>(&numSignificantColors), 4);

/*Write the color table into the .bmp file*/




   
/*Write the pixel data into the .bmp file.  Make sure line lengths
are multiples of 4 bytes. 
*/
   
}


